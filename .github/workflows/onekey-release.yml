name: "OneKey Release"

on:
  workflow_dispatch:
    inputs:
      git_tag:
        description: 'Git tag'
        required: true
        type: string
      cu:
        description: 'CUDA version'
        required: true
        type: string
        default: "128"
      python_minor:
        description: 'Python minor version'
        required: true
        type: string
        default: "10"
      python_patch:
        description: 'Python patch version'
        required: true
        type: string
        default: "11"
      xformers:
        description: 'xformers version'
        required: false
        type: string
        default: ""
      extra_dependencies:
        description: 'extra dependencies'
        required: false
        type: string
        default: ""

jobs:
  build_dependencies:
    runs-on: windows-latest
    outputs:
      cu_python_deps_tar: cu${{ inputs.cu }}_python_deps.tar
      update_bat: update_comfyui_and_python_dependencies.bat
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.${{ inputs.python_minor }}.${{ inputs.python_patch }}
      - shell: bash
        run: |
          echo "@echo off
          call update_comfyui.bat nopause
          echo -
          echo This will try to update pytorch and all python dependencies.
          echo -
          echo If you just want to update normally, close this and run update_comfyui.bat instead.
          echo -
          pause
          ..\python_embeded\python.exe -s -m pip install --upgrade torch torchvision torchaudio ${{ inputs.xformers }} --extra-index-url https://download.pytorch.org/whl/cu${{ inputs.cu }} -r ../ComfyUI/requirements.txt pygit2
          pause" > update_comfyui_and_python_dependencies.bat

          python -m pip wheel --no-cache-dir torch torchvision torchaudio ${{ inputs.xformers }} ${{ inputs.extra_dependencies }} --extra-index-url https://download.pytorch.org/whl/cu${{ inputs.cu }} -r requirements.txt pygit2 -w ./temp_wheel_dir
          python -m pip install --no-cache-dir ./temp_wheel_dir/*
          echo installed basic
          ls -lah temp_wheel_dir
          mv temp_wheel_dir cu${{ inputs.cu }}_python_deps
          tar cf cu${{ inputs.cu }}_python_deps.tar cu${{ inputs.cu }}_python_deps
      - name: Upload dependency artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deps-artifacts
          path: |
            cu${{ inputs.cu }}_python_deps.tar
            update_comfyui_and_python_dependencies.bat

  package_comfy_windows:
    needs: build_dependencies
    permissions:
      contents: "write"
      packages: "write"
      pull-requests: "read"
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.git_tag }}
          fetch-depth: 150
          persist-credentials: false
      - name: Download dependency artifacts
        uses: actions/download-artifact@v4
        with:
          name: deps-artifacts
      - shell: bash
        run: |
          mv cu${{ inputs.cu }}_python_deps.tar ../
          mv update_comfyui_and_python_dependencies.bat ../
          cd ..
          tar xf cu${{ inputs.cu }}_python_deps.tar
          pwd
          ls
      - shell: bash
        run: |
          cd ..
          cp -r ComfyUI ComfyUI_copy
          curl https://www.python.org/ftp/python/3.${{ inputs.python_minor }}.${{ inputs.python_patch }}/python-3.${{ inputs.python_minor }}.${{ inputs.python_patch }}-embed-amd64.zip -o python_embeded.zip
          unzip python_embeded.zip -d python_embeded

          # === 下载源码包提取头文件和库 ===
          PY_VER=3.${{ inputs.python_minor }}.${{ inputs.python_patch }}
          echo "Downloading python-$PY_VER.tar.xz (source tarball for headers/libs)..."
          curl -L -o python_src.tar.xz https://www.python.org/ftp/python/$PY_VER/Python-$PY_VER.tar.xz
          mkdir python_src
          tar -xf python_src.tar.xz -C python_src --strip-components=1

          echo "Copying Include/ to python_embeded/Include"
          mkdir -p python_embeded/Include
          cp -r python_src/Include/* python_embeded/Include/

          echo "Copying Lib/ to python_embeded/Lib"
          mkdir -p python_embeded/Lib
          cp -r python_src/Lib/* python_embeded/Lib/

          cd python_embeded
          echo ${{ env.MINOR_VERSION }}
          echo 'import site' >> ./python3${{ inputs.python_minor }}._pth
          curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          ./python.exe get-pip.py
          ./python.exe -s -m pip install ../cu${{ inputs.cu }}_python_deps/*
          sed -i '1i../ComfyUI' ./python3${{ inputs.python_minor }}._pth
          cd ..

          git clone --depth 1 https://github.com/comfyanonymous/taesd
          cp taesd/*.safetensors ./ComfyUI_copy/models/vae_approx/

          mkdir ComfyUI_windows_portable
          mv python_embeded ComfyUI_windows_portable
          mv ComfyUI_copy ComfyUI_windows_portable/ComfyUI

          cd ComfyUI_windows_portable

          mkdir update
          cp -r ComfyUI/.ci/update_windows/* ./update/
          cp -r ComfyUI/.ci/windows_base_files/* ./
          cp ../update_comfyui_and_python_dependencies.bat ./update/

          cd ..

          "C:\Program Files\7-Zip\7z.exe" a -t7z -m0=lzma2 -mx=9 -mfb=128 -md=512m -ms=on -mf=BCJ2 ComfyUI_windows_portable.7z ComfyUI_windows_portable
          mv ComfyUI_windows_portable.7z ComfyUI/ComfyUI_windows_portable_nvidia.7z

          cd ComfyUI_windows_portable
          python_embeded/python.exe -s ComfyUI/main.py --quick-test-for-ci --cpu

          python_embeded/python.exe -s ./update/update.py ComfyUI/

          ls
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ComfyUI_windows_portable_nvidia.7z
          tag: ${{ inputs.git_tag }}
          overwrite: true
          draft: true 